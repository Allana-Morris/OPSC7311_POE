// Generated by view binder compiler. Do not edit!
package com.example.opsc7311poe.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.opsc7311poe.R;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityTaskCalendarBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final BottomNavigationView bottomNavigationView3;

  @NonNull
  public final Button btnAddEvent;

  @NonNull
  public final ConstraintLayout clScrollView;

  @NonNull
  public final ImageButton ibBack;

  @NonNull
  public final ImageButton ibCalendar;

  @NonNull
  public final ImageButton ibForward;

  @NonNull
  public final ImageButton ibHome;

  @NonNull
  public final ImageButton ibProfile;

  @NonNull
  public final ImageButton ibTimer;

  @NonNull
  public final ImageView ivArch;

  @NonNull
  public final ConstraintLayout llCalendar;

  @NonNull
  public final ConstraintLayout llHome;

  @NonNull
  public final ConstraintLayout llProfile;

  @NonNull
  public final ConstraintLayout llTimer;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final RecyclerView rvTasks;

  @NonNull
  public final ScrollView svCalendar;

  @NonNull
  public final TextView tvCalendar;

  @NonNull
  public final TextView tvDate;

  @NonNull
  public final TextView tvHome;

  @NonNull
  public final TextView tvProfile;

  @NonNull
  public final TextView tvTimer;

  private ActivityTaskCalendarBinding(@NonNull ConstraintLayout rootView,
      @NonNull BottomNavigationView bottomNavigationView3, @NonNull Button btnAddEvent,
      @NonNull ConstraintLayout clScrollView, @NonNull ImageButton ibBack,
      @NonNull ImageButton ibCalendar, @NonNull ImageButton ibForward, @NonNull ImageButton ibHome,
      @NonNull ImageButton ibProfile, @NonNull ImageButton ibTimer, @NonNull ImageView ivArch,
      @NonNull ConstraintLayout llCalendar, @NonNull ConstraintLayout llHome,
      @NonNull ConstraintLayout llProfile, @NonNull ConstraintLayout llTimer,
      @NonNull ConstraintLayout main, @NonNull RecyclerView rvTasks, @NonNull ScrollView svCalendar,
      @NonNull TextView tvCalendar, @NonNull TextView tvDate, @NonNull TextView tvHome,
      @NonNull TextView tvProfile, @NonNull TextView tvTimer) {
    this.rootView = rootView;
    this.bottomNavigationView3 = bottomNavigationView3;
    this.btnAddEvent = btnAddEvent;
    this.clScrollView = clScrollView;
    this.ibBack = ibBack;
    this.ibCalendar = ibCalendar;
    this.ibForward = ibForward;
    this.ibHome = ibHome;
    this.ibProfile = ibProfile;
    this.ibTimer = ibTimer;
    this.ivArch = ivArch;
    this.llCalendar = llCalendar;
    this.llHome = llHome;
    this.llProfile = llProfile;
    this.llTimer = llTimer;
    this.main = main;
    this.rvTasks = rvTasks;
    this.svCalendar = svCalendar;
    this.tvCalendar = tvCalendar;
    this.tvDate = tvDate;
    this.tvHome = tvHome;
    this.tvProfile = tvProfile;
    this.tvTimer = tvTimer;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityTaskCalendarBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityTaskCalendarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_task_calendar, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityTaskCalendarBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottomNavigationView3;
      BottomNavigationView bottomNavigationView3 = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavigationView3 == null) {
        break missingId;
      }

      id = R.id.btnAddEvent;
      Button btnAddEvent = ViewBindings.findChildViewById(rootView, id);
      if (btnAddEvent == null) {
        break missingId;
      }

      id = R.id.clScrollView;
      ConstraintLayout clScrollView = ViewBindings.findChildViewById(rootView, id);
      if (clScrollView == null) {
        break missingId;
      }

      id = R.id.ibBack;
      ImageButton ibBack = ViewBindings.findChildViewById(rootView, id);
      if (ibBack == null) {
        break missingId;
      }

      id = R.id.ib_Calendar;
      ImageButton ibCalendar = ViewBindings.findChildViewById(rootView, id);
      if (ibCalendar == null) {
        break missingId;
      }

      id = R.id.ibForward;
      ImageButton ibForward = ViewBindings.findChildViewById(rootView, id);
      if (ibForward == null) {
        break missingId;
      }

      id = R.id.ib_Home;
      ImageButton ibHome = ViewBindings.findChildViewById(rootView, id);
      if (ibHome == null) {
        break missingId;
      }

      id = R.id.ib_Profile;
      ImageButton ibProfile = ViewBindings.findChildViewById(rootView, id);
      if (ibProfile == null) {
        break missingId;
      }

      id = R.id.ib_Timer;
      ImageButton ibTimer = ViewBindings.findChildViewById(rootView, id);
      if (ibTimer == null) {
        break missingId;
      }

      id = R.id.ivArch;
      ImageView ivArch = ViewBindings.findChildViewById(rootView, id);
      if (ivArch == null) {
        break missingId;
      }

      id = R.id.llCalendar;
      ConstraintLayout llCalendar = ViewBindings.findChildViewById(rootView, id);
      if (llCalendar == null) {
        break missingId;
      }

      id = R.id.llHome;
      ConstraintLayout llHome = ViewBindings.findChildViewById(rootView, id);
      if (llHome == null) {
        break missingId;
      }

      id = R.id.llProfile;
      ConstraintLayout llProfile = ViewBindings.findChildViewById(rootView, id);
      if (llProfile == null) {
        break missingId;
      }

      id = R.id.llTimer;
      ConstraintLayout llTimer = ViewBindings.findChildViewById(rootView, id);
      if (llTimer == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.rvTasks;
      RecyclerView rvTasks = ViewBindings.findChildViewById(rootView, id);
      if (rvTasks == null) {
        break missingId;
      }

      id = R.id.svCalendar;
      ScrollView svCalendar = ViewBindings.findChildViewById(rootView, id);
      if (svCalendar == null) {
        break missingId;
      }

      id = R.id.tv_calendar;
      TextView tvCalendar = ViewBindings.findChildViewById(rootView, id);
      if (tvCalendar == null) {
        break missingId;
      }

      id = R.id.tvDate;
      TextView tvDate = ViewBindings.findChildViewById(rootView, id);
      if (tvDate == null) {
        break missingId;
      }

      id = R.id.tv_Home;
      TextView tvHome = ViewBindings.findChildViewById(rootView, id);
      if (tvHome == null) {
        break missingId;
      }

      id = R.id.tv_Profile;
      TextView tvProfile = ViewBindings.findChildViewById(rootView, id);
      if (tvProfile == null) {
        break missingId;
      }

      id = R.id.tv_timer;
      TextView tvTimer = ViewBindings.findChildViewById(rootView, id);
      if (tvTimer == null) {
        break missingId;
      }

      return new ActivityTaskCalendarBinding((ConstraintLayout) rootView, bottomNavigationView3,
          btnAddEvent, clScrollView, ibBack, ibCalendar, ibForward, ibHome, ibProfile, ibTimer,
          ivArch, llCalendar, llHome, llProfile, llTimer, main, rvTasks, svCalendar, tvCalendar,
          tvDate, tvHome, tvProfile, tvTimer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
